/**
 * This file is part of Autolycus.
 * Copyright 2010 Joseph Jon Booker.
 *
 * Autolycus is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.

 * Autolycus is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with Autolycus.  If not, see <http://www.gnu.org/licenses/>.
 */
package net.neoturbine.autolycus.internal;

import android.util.Log;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;

final class PredictionBuilder {
	private int predtype;
	private String stopName;
	private int stpid; // stop id
	private int vid; // vehicle id
	private int distance; // distance in feet
	private String rt; // Route
	private String dir; // Direction
	private String des; // destination
	private boolean delayed = false;
	private static final String TAG = "Autolycus";

	private boolean isSet = false;

	private Date estTime; // estimated time
	private Date predTime; // when prediction was generated
	// date format used by above two
	private final static SimpleDateFormat _df = new SimpleDateFormat(
			"yyyyMMdd HH:mm");

	// constants for predtype
	public static final int ARRIVAL_PREDICTION = 1;
	public static final int DEPARTURE_PREDICTION = 2;

	public PredictionBuilder(String timeZone) {
		_df.setTimeZone(TimeZone.getTimeZone(timeZone));
	}

	public boolean isSet() {
		return isSet;
	}

	// use to go from getpredictions to this object
	public void setField(String name, String value) throws ParseException {
		isSet = true;
		if (name.equals("tmstmp")) {
			setPredTime(_df.parse(value));
		} else if (name.equals("typ")) {
			if (value.equals("A"))
				setType(ARRIVAL_PREDICTION);
			else
				setType(DEPARTURE_PREDICTION);
		} else if (name.equals("stpnm"))
			setStopName(value);
		else if (name.equals("stpid"))
			setStopID(Integer.parseInt(value));
		else if (name.equals("vid"))
			setVid(Integer.parseInt(value));
		else if (name.equals("dstp"))
			setDistance(Integer.parseInt(value));
		else if (name.equals("rt"))
			setRoute(value);
		else if (name.equals("rtdir"))
			setDirection(value);
		else if (name.equals("des"))
			setDestination(value);
		else if (name.equals("prdtm"))
			setEstTime(_df.parse(value));
		else if (name.equals("dly"))
			setDelayed(true);
		else
			Log.w(TAG, "Unknown in Prediction object: " + name + " = " + value);
	}

	// Generated getters/setters
	public int getType() {
		return predtype;
	}

	public void setType(int predtype) {
		this.predtype = predtype;
	}

	public String getStopName() {
		return stopName;
	}

	public void setStopName(String stopName) {
		this.stopName = stopName;
	}

	public int getStopID() {
		return stpid;
	}

	public void setStopID(int stpid) {
		this.stpid = stpid;
	}

	public int getVid() {
		return vid;
	}

	public void setVid(int vid) {
		this.vid = vid;
	}

	public int getDistance() {
		return distance;
	}

	public void setDistance(int distance) {
		this.distance = distance;
	}

	public String getRoute() {
		return rt;
	}

	public void setRoute(String rt) {
		this.rt = rt;
	}

	public String getDirection() {
		return dir;
	}

	public void setDirection(String dir) {
		this.dir = dir;
	}

	public String getDestination() {
		return des;
	}

	public void setDestination(String des) {
		this.des = des;
	}

	public Date getEstTime() {
		return estTime;
	}

	public void setEstTime(Date estTime) {
		this.estTime = estTime;
	}

	public Date getPredTime() {
		return predTime;
	}

	public void setPredTime(Date predTime) {
		this.predTime = predTime;
	}

	public void setDelayed(boolean delayed) {
		this.delayed = delayed;
	}

	public boolean isDelayed() {
		return delayed;
	}

	// generated by eclipse
	@Override
	public String toString() {
		return String
				.format("Prediction [getDestination()=%s, getDirection()=%s, getDistance()=%s, getEstTime()=%s, getPredTime()=%s, getRoute()=%s, getStopID()=%s, getStopName()=%s, getType()=%s, getVidID()=%s]",
						getDestination(), getDirection(), getDistance(),
						getEstTime(), getPredTime(), getRoute(), getStopID(),
						getStopName(), getType(), getVid());
	}

	public Prediction toPrediction() {
		return new Prediction(predtype, stopName, stpid, vid, distance, rt,
				dir, des, estTime, predTime, delayed);
	}

}
